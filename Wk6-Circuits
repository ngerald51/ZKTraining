1) Create an arithmetic circuit that takes signals x₁, x₂, ..., xₙ and is satisfied if at least one signal is 0.

x1(x1 - 1) === 0
x2(x2 - 1) === 0
...xn(xn-1)=== 0
Z === (x1 + x2...xn) - (x1*x2*...xn)

2) Create an arithmetic circuit that takes signals x₁, x₂, ..., xₙ and is satsified if all signals are 1.

x1(x1 - 1) === 0
x2(x2 - 1) === 0
...xn(xn-1)=== 0
Z === (x1x2..xn)

3) A bipartite graph is a graph that can be colored with two colors such that no two neighboring nodes share the same color. Devise an arithmetic circuit scheme to show you have a valid witness of a 2-coloring of a graph. Hint: the scheme in this tutorial needs to be adjusted before it will work with a 2-coloring.

4) Create an arithmetic circuit that constrains k to be the maximum of x, y, or z. That is, k should be equal to x if x is the maximum value, and same for y and z.

Summary of the Arithmetic Circuit

Inputs: Binary variables x1,x2,…,xnx_1, x_2, \ldots, x_nx1​,x2​,…,xn​ and the target sum kkk.

Output: A binary value that indicates whether a subset of SSS sums to kkk.

Computation Steps:

Compute the sum Sum=∑i=1nxi⋅ai\text{Sum} = \sum_{i=1}^{n} x_i \cdot a_iSum=∑i=1n​xi​⋅ai​.

Subtract kkk from the sum to get t=Sum−kt = \text{Sum} - kt=Sum−k.

Check if T is 0 by squaring T and verifying if the result is 0.

5) Create an arithmetic circuit that takes signals x₁, x₂, ..., xₙ, constrains them to be binary, and outputs 1 if at least one of the signals is 1. Hint: this is tricker than it looks. Consider combining what you learned in the first two problems and using the NOT gate.

x1(x1 - 1) === 0
x2(x2 - 1) === 0
...xn(xn-1)=== 0
Z === (x1 + x2...xn) - 2(x1*x2*...xn)

6) Create an arithmetic circuit to determine if a signal v is a power of two (1, 2, 4, 8, etc). Hint: create an arithmetic circuit that constrains another set of signals to encode the binary representation of v, then place additional restrictions on those signals.

7) Create an arithmetic circuit that models the Subset sum problem. Given a set of integers (assume they are all non-negative), determine if there is a subset that sums to a given value 
𝑘. For example, given the set {3,5,17,21} and 𝑘=22, there is a subset {5,17} that sums to 22. Of course, a subset sum problem does not necessarily have a solution.

8) The covering set problem starts with a set 𝑆={1,2,…,10} and several well-defined subsets of 𝑆, for example: {1,2,3}, {3,5,7,9}, {8,10}, {5,6,7,8}, {2,4,6,8}, and asks if we can take at most 𝑘 subsets of 𝑆 such that their union is 𝑆. In the example problem above, the answer for 𝑘=4 is true because we can use {1,2,3}, {3,5,7,9}, {8,10}, {2,4,6,8}. Note that for each problems, the subsets we can work with are determined at the beginning. We cannot construct the subsets ourselves. If we had been given the subsets {1,2,3}, {4,5} {7,8,9,10} then there would be no solution because the number 6 is not in the subsets.
On the other hand, if we had been given 𝑆={1,2,3,4,5} and the subsets {1},{1,2},{3,4},{1,4,5} and asked can it be covered with 𝑘=2 subsets, then there would be no solution. However, if 𝑘=3 then a valid solution would be {1,2},{3,4},{1,4,5}.
Our goal is to prove for a given set 𝑆 and a defined list of subsets of 𝑆, if we can pick a set of subsets such that their union is 𝑆. Specifically, the question is if we can do it with 𝑘 or fewer subsets. We wish to prove we know which 𝑘 (or fewer) subsets to use by encoding the problem as an arithmetic circuit.
